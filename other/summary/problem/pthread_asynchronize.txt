
一、变量标记同步。
线程本身是将变量拷贝进线程中进行运行，运行完成后才会与外部变量进行同步。所以可能发生的情况就是多线程时，其他线程拿到的值不一样，这时可将变量初始化为原子类。

二、一个线程处理所有数据，有数据时不关闭线程。
当只想用一个线程处理数据，有数据时处理，只开这一个线程，再来数据时不终止线程，而让这个线程继续处理，数据可插入列表，线程从列表中以此处理数据。没数据时结束，再次来数据时，
重新开一个线程继续处理，可以采用线程标记的方式。

三、多次开启和关闭线程。
如：点击按键，按下时开启线程，松开时关闭线程，频繁的按键事件会导致各种问题。
此时线程的终止可用interrupt方法，线程一定要休眠以终止线程。可能在休眠时间后开启了其他线程，导致有多个线程同时在跑，此时需要额外处理，共享的资源使用时一定要加锁（如AudioRecorder的开启和释放），需要完成的事务需要放在原子标记位之间进行。

在后开的线程必须要终止前一个线程，而且自身需要进行业务操作时，此时线程标记无法起到作用。如果在线程休眠期间无法interrupt，那么该线程就无法被终止。所以想要实现这种功能，就需要在业务操作时，最好将业务操作细分在while，然后在while中进行短暂休眠已让线程能够退出。