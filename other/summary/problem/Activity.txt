从源码中的逻辑来看的话,判断一个intent是不是显式声明的点就是component和package,只要这两个有一个生效就不算是隐式声明的.
其他App中调用另一个app中的Activity，即打开第三方应用。
"com.example.myapplication"是另一个app的包名，这个Acitivity不需要在清单文件中声明。
------------------------------------------------------------------------
包名+类名的方式	显示意图
方法一：
Intent intent1 = new Intent();
// 包名 包名+类名（全路径）
intent1.setClassName("com.example.myapplication", "com.example.myapplication.MainActivity");

方法二：
Intent intent2 = new Intent();
ComponentName componentName = new ComponentName("com.example.myapplication", 		"com.example.myapplication.MainActivity");
intent2.setComponent(componentName);
-------------------------------------------------------------------------
Action的方式	隐示意图
"android.intent.action.custom"这个动作需要在另一个app的清单文件中添加
<action android:name="android.intent.action.custom" />,
并且需要添加
<category android:name="android.intent.category.DEFAULT" />，否则报错No Activity found to handle Intent

Intent intent3 = new Intent();
intent3.setAction("android.intent.action.custom");

############################################################################################
android5.0之前是可以通过设置隐式意图来跨应用打开Service的,5.0之后就必须要通过显示意图来开启Service.

方法一：
Intent intent1 = new Intent();
ComponentName componentName = new ComponentName("com.example.myapplication", "com.example.myapplication.common.CommonService");
intent1.setComponent(componentName);

方法二：
Intent intent2 = new Intent();
intent2.setPackage("com.example.myapplication");
intent2.setAction("com.custom.CommonService");
		